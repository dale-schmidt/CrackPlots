@model ForeSight.Web.Models.ViewModels.ItemViewModel<String>
@{
    ViewBag.Title = "Reset password";
    Layout = "~/Views/Shared/_UserLayout.cshtml";
}

<div ng-controller="resetController as rVm">
    <h2>Reset Password</h2>

    <hr />

    <div class="form-group">
        <div class="row">
            <div class="col-md-6">
                <label>Email</label>
                <input type="text" class="form-control" ng-model="rVm.user.email" />
            </div>
        </div>
    </div>
    <div class="form-group">
        <div class="row">
            <div class="col-md-6">
                <label>Password</label>
                <input type="password" class="form-control" ng-model="rVm.user.password" />
            </div>
        </div>
    </div>
    <div class="form-group">
        <div class="row">
            <div class="col-md-6">
                <label>Confirm Password</label>
                <input type="password" class="form-control" ng-model="rVm.user.confirm" />
            </div>
        </div>
    </div>
    <div class="form-group">
        <div class="row">
            <div class="col-md-6">
                <button class="btn btn-default" ng-click="rVm.reset()">Reset Password</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script type="text/javascript">
        (function () {
            "use strict";
            angular.module('myApp')
                .value('razorViewModel', @Html.Raw(Json.Encode(Model)));
        })();
    </script>
    <script type="text/javascript">
        "use strict";
        angular.module('myApp')
            .controller('resetController', ResetController);

        ResetController.$inject = ['$http', '$window', 'razorViewModel'];

        function ResetController($http, $window, razorViewModel) {
            var vm = this;
            vm.$http = $http;
            vm.$window = $window;
            vm.razorViewModel = razorViewModel;

            vm.user = {
                email: '',
                password: '',
                confirm: '',
                guid: vm.$window.location.href.split('/')[5]
            };

            vm.reset = _reset;

            function _reset() {
                if (vm.user.password && vm.user.email) {
                    if (vm.user.password === vm.user.confirm) {
                        if (vm.user.password.match(/^(?=.*[a-z])(?=.*\d)[A-Za-z\d$@@$!%*?&]{6,}/)) {
                            var url = '/api/users/resetpassword/';
                            vm.$http.put(url, vm.user)
                                .then(_resetSuccess, _resetError);
                        } else {
                            alert("Password must be at least 6 characters and contain at least one lowercase letter and one digit.");
                        }
                    } else {
                        alert("Passwords must match");
                    }
                } else {
                    alert("Must enter email and password");
                }
            }

            function _resetSuccess(resp) {
                confirm('Password changed.')
                vm.$window.location.href = '/account/login';
            }

            function _resetError(resp) {
                console.log(resp);
                alert('Failed to reset password.')
            }
        }
    </script>
}
