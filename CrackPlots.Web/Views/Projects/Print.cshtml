@model ForeSight.Web.Models.ViewModels.BaseViewModel
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta http-equiv="content-type" content="text/html;charset=UTF-8" />
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta content="" name="description" />
    <meta content="" name="author" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />

    <link rel="shortcut icon" href="/Assets/images/favicon.png" type="image/x-icon" />    <!-- Favicon -->
    <link rel="apple-touch-icon-precomposed" href="/Assets/images/apple-touch-icon-57-precomposed.png">	<!-- For iPhone -->
    <link rel="apple-touch-icon-precomposed" sizes="114x114" href="/Assets/images/apple-touch-icon-114-precomposed.png">    <!-- For iPhone 4 Retina display -->
    <link rel="apple-touch-icon-precomposed" sizes="72x72" href="/Assets/images/apple-touch-icon-72-precomposed.png">    <!-- For iPad -->
    <link rel="apple-touch-icon-precomposed" sizes="144x144" href="/Assets/images/apple-touch-icon-144-precomposed.png">    <!-- For iPad Retina display -->
    <!-- CORE CSS FRAMEWORK - START -->
    <link href="/Assets/plugins/pace/pace-theme-flash.css" rel="stylesheet" type="text/css" media="screen" />
    <link href="/Assets/plugins/bootstrap/css/bootstrap.min.css" rel="stylesheet" type="text/css" />
    <link href="/Assets/plugins/bootstrap/css/bootstrap-theme.min.css" rel="stylesheet" type="text/css" />
    <link href="/Assets/fonts/font-awesome/css/font-awesome.css" rel="stylesheet" type="text/css" />
    <!-- CORE CSS FRAMEWORK - END -->
    <!-- HEADER SCRIPTS INCLUDED ON THIS PAGE - START -->
    <link href="/Assets/plugins/jvectormap/jquery-jvectormap-2.0.1.css" rel="stylesheet" type="text/css" media="screen" />
    <!-- HEADER SCRIPTS INCLUDED ON THIS PAGE - END -->
    <!-- CORE CSS TEMPLATE - START -->
    <link href="/Assets/css/style.css" rel="stylesheet" type="text/css" />
    <link href="/Assets/css/responsive.css" rel="stylesheet" type="text/css" />
    <!-- CORE CSS TEMPLATE - END -->
    <title>Print</title>
    <style>
        body {
            background-color: white;
            color: black;
        }
        [ng\:cloak], [ng-cloak], [data-ng-cloak], [x-ng-cloak], .ng-cloak, .x-ng-cloak {
            display: none !important;
        }
    </style>
</head>
<body>
    <div ng-app="myApp">
        <div class="col-md-offset-1 col-md-10 col-xs-12" ng-cloak>
            <div ng-controller="projectController as pVm">
                <div class="page-title">
                    <h1 class="title">{{pVm.project.title}}</h1>
                    <h3>{{pVm.project.storyType.name}}</h3>
                    <label ng-if="pVm.project.logline">Logline:</label>
                    <p ng-if="pVm.project.logline">{{pVm.project.logline}}</p>
                    <label ng-if="pVm.project.notes">Notes:</label>
                    <div ng-if="pVm.project.notes" ng-bind-html="pVm.project.notes"></div>
                </div>
                <hr />
                <div class="act" ng-repeat="act in pVm.project.acts">
                    <h3>Act {{act.title}}</h3>
                    <label ng-if="act.centralQuestion">Central Question:</label>
                    <p ng-if="act.centralQuestion">{{act.centralQuestion}}</p>
                    <label ng-if="act.summary">Summary:</label>
                    <div ng-if="act.summary" ng-bind-html="act.summary"></div>
                    <label ng-if="act.notes">Notes:</label>
                    <div ng-if="act.notes" ng-bind-html="act.notes"></div>
                    <ul>
                        <li ng-repeat="sequence in act.sequences">
                            <h3>{{sequence.title}}</h3>
                            <label ng-if="sequence.centralQuestion">Central Question:</label>
                            <p ng-if="sequence.centralQuestion">{{sequence.centralQuestion}}</p>
                            <label ng-if="sequence.summary">Summary:</label>
                            <div ng-if="sequence.summary" ng-bind-html="sequence.summary"></div>
                            <label ng-if="sequence.notes">Notes:</label>
                            <div ng-if="sequence.notes" ng-bind-html="sequence.notes"></div>
                            <ul>
                                <li ng-repeat="scene in sequence.scenes">
                                    <h3>{{scene.title}} Scene</h3>
                                    <label ng-if="scene.setting">Setting:</label>
                                    <p ng-if="scene.setting">{{scene.setting}}</p>
                                    <label ng-if="scene.summary">Summary:</label>
                                    <div ng-if="scene.summary" ng-bind-html="scene.summary"></div>
                                    <label ng-if="scene.conflict">Conflict:</label>
                                    <div ng-if="scene.conflict" ng-bind-html="scene.conflict"></div>
                                    <label ng-if="scene.turn">Turn:</label>
                                    <div ng-if="scene.turn" ng-bind-html="scene.turn"></div>
                                    <label ng-if="scene.characters">Characters:</label>
                                    <ul ng-if="scene.characters">
                                        <li ng-repeat="character in scene.characters">
                                            <h4>{{character.character.name}}</h4>
                                            <label ng-if="character.physicalGoal">Physical Goal:</label>
                                            <p ng-if="character.physicalGoal">{{character.physicalGoal}}</p>
                                            <label ng-if="character.emotionalGoal">Emotional Goal:</label>
                                            <p ng-if="character.emotionalGoal">{{character.emotionalGoal}}</p>
                                            <label ng-if="characher.obstacle">Obstacle:</label>
                                            <p ng-if="characher.obstacle">{{character.obstacle}}</p>
                                            <label ng-if="character.start">Scene start:</label>
                                            <p ng-if="character.start">{{character.start}}</p>
                                            <label ng-if="character.end">Scene end:</label>
                                            <p ng-if="character.end">{{character.end}}</p>
                                        </li>
                                    </ul>
                                </li>
                            </ul>
                        </li>
                    </ul>
                    <hr />
                </div>
            </div>
        </div>
    </div>
    <!-- CORE JS FRAMEWORK - START -->
    <script src="/Assets/js/jquery-1.11.2.min.js" type="text/javascript"></script>
    <script src="/Assets/plugins/bootstrap/js/bootstrap.min.js" type="text/javascript"></script>
    <script src="/Assets/plugins/viewport/viewportchecker.js" type="text/javascript"></script>
    <script>window.jQuery || document.write('<script src="/Assets/js/jquery-1.11.2.min.js"><\/script>');</script>
    <!-- CORE JS FRAMEWORK - END -->
    <!-- OTHER SCRIPTS INCLUDED ON THIS PAGE - START -->
    <!-- OTHER SCRIPTS INCLUDED ON THIS PAGE - END -->
    <!-- CORE TEMPLATE JS - START -->
    <!-- END CORE TEMPLATE JS - END -->
    <script src="~/Scripts/angular.js"></script>
    <script src="~/Scripts/angular-sanitize.min.js"></script>
    <script type="text/javascript">
        (function () {
            "use strict";
            angular.module('myApp', ['ngSanitize']);
        })();
        (function () {
            "use strict";
            angular.module('myApp')
                .value('razorViewModel', @Html.Raw(Json.Encode(Model)))
        })();
        (function () {
            "use strict";
            angular.module('myApp')
                .controller('projectController', ProjectController);

            ProjectController.$inject = ['$http', '$window', '$timeout', 'razorViewModel'];

            function ProjectController($http, $window, $timeout, razorViewModel) {
                var vm = this;
                vm.$http = $http;
                vm.$window = $window;
                vm.$timeout = $timeout;
                vm.razorViewModel = razorViewModel;

                vm.project = null;

                _getProject();

                function _getProject() {
                    vm.$http({
                        method: 'GET',
                        url: '/api/projects/print/' + vm.razorViewModel.Item
                    }).then(_getProjectSuccess, _getProjectError);
                }

                function _getProjectSuccess(resp) {
                    console.log(resp);
                    vm.project = resp.data.item;
                    vm.$timeout(function () { vm.$window.print() }, 1000);
                }

                function _getProjectError(resp) {
                    console.log(resp);
                }
            }
        })();
    </script>
</body>
</html>
